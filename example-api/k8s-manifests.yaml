# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: auth
  labels:
    name: auth
    tier: TIER-1
    team: auth-squad

---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-config
  namespace: auth
  labels:
    app: user-authentication
    tier: TIER-1
    team: auth-squad
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  DATABASE_URL: "postgres://auth:password@auth-db:5432/auth"
  CACHE_URL: "redis://auth-redis:6379"

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-api
  namespace: auth
  labels:
    app: user-authentication
    component: auth-api
    tier: TIER-1
    team: auth-squad
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: user-authentication
      component: auth-api
  template:
    metadata:
      labels:
        app: user-authentication
        component: auth-api
        tier: TIER-1
        team: auth-squad
    spec:
      containers:
      - name: auth-api
        image: user-authentication-api:latest
        imagePullPolicy: IfNotPresent  # For local development with docker-desktop
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: auth-config
              key: NODE_ENV
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: auth-config
              key: DATABASE_URL
        - name: CACHE_URL
          valueFrom:
            configMapKeyRef:
              name: auth-config
              key: CACHE_URL
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2

---
# Worker Deployment (simulates auth-worker)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-worker
  namespace: auth
  labels:
    app: user-authentication
    component: auth-worker
    tier: TIER-1
    team: auth-squad
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: user-authentication
      component: auth-worker
  template:
    metadata:
      labels:
        app: user-authentication
        component: auth-worker
        tier: TIER-1
        team: auth-squad
    spec:
      containers:
      - name: auth-worker
        image: user-authentication-api:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        - name: NODE_ENV
          value: "worker"
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 15

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: auth-svc
  namespace: auth
  labels:
    app: user-authentication
    tier: TIER-1
    team: auth-squad
spec:
  selector:
    app: user-authentication
    component: auth-api
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  type: ClusterIP

---
# NodePort Service (for external access during development)
apiVersion: v1
kind: Service
metadata:
  name: auth-nodeport
  namespace: auth
  labels:
    app: user-authentication
    tier: TIER-1
    team: auth-squad
spec:
  selector:
    app: user-authentication
    component: auth-api
  ports:
  - name: http
    port: 80
    targetPort: 8080
    nodePort: 30080
    protocol: TCP
  type: NodePort
